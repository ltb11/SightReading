<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 22.2.1">

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead"
        category="Correctness"
        priority="6"
        summary="Finds calls to locale-ambiguous `String` manipulation methods"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    final String fileNameLwr = fileName.toLowerCase();"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/src/com/lamerman/FileDialog.java"
            line="247"
            column="41"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead"
        category="Correctness"
        priority="6"
        summary="Finds calls to locale-ambiguous `String` manipulation methods"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    final String fileNameLwr = fileName.toLowerCase();"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/src/com/lamerman/FileDialog.java"
            line="247"
            column="41"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead"
        category="Correctness"
        priority="6"
        summary="Finds calls to locale-ambiguous `String` manipulation methods"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      final String formatLwr = formatFilter[i].toLowerCase();"
        errorLine2="                                               ~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/src/com/lamerman/FileDialog.java"
            line="252"
            column="48"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead"
        category="Correctness"
        priority="6"
        summary="Finds calls to locale-ambiguous `String` manipulation methods"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      final String formatLwr = formatFilter[i].toLowerCase();"
        errorLine2="                                               ~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/src/com/lamerman/FileDialog.java"
            line="252"
            column="48"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="  android:textSize=&quot;23dp&quot;>&lt;/TextView> "
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_row.xml"
            line="13"
            column="3"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="  android:textSize=&quot;23dp&quot;>&lt;/TextView> "
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_row.xml"
            line="13"
            column="3"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a LinearLayout: layout_alignParentBottom"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="   android:layout_alignParentBottom=&quot;true&quot; android:paddingLeft=&quot;10dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="14"
            column="4"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a LinearLayout: layout_alignParentBottom"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="   android:layout_alignParentBottom=&quot;true&quot; android:paddingLeft=&quot;10dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="14"
            column="4"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a LinearLayout: layout_alignParentBottom"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="   android:layout_alignParentBottom=&quot;true&quot; android:paddingLeft=&quot;10dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="31"
            column="4"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a LinearLayout: layout_alignParentBottom"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="   android:layout_alignParentBottom=&quot;true&quot; android:paddingLeft=&quot;10dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="31"
            column="4"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.color.gray appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;gray&quot;>#ffff0000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values/strings.xml"
            line="12"
            column="12"/>
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values-ru/strings.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.color.gray appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;gray&quot;>#ffff0000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values/strings.xml"
            line="12"
            column="12"/>
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values-ru/strings.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.err appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;err&quot;>Error&lt;/string>"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values/strings.xml"
            line="13"
            column="13"/>
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values-ru/strings.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.err appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;err&quot;>Error&lt;/string>"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values/strings.xml"
            line="13"
            column="13"/>
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/values-ru/strings.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is useless"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="   &lt;LinearLayout android:orientation=&quot;horizontal&quot;"
        errorLine2="   ^"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="17"
            column="4"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is useless"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="   &lt;LinearLayout android:orientation=&quot;horizontal&quot;"
        errorLine2="   ^"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="17"
            column="4"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an inputType or a hint"
        category="Usability"
        priority="5"
        summary="Looks for text fields missing `inputType` or `hint` settings"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). Similarly,a hint attribute displays a hint to the user for what is expected in the text field.

The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.

If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="   &lt;EditText android:text=&quot;&quot; android:id=&quot;@+id/fdEditTextFile&quot;"
        errorLine2="   ^"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="35"
            column="4"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an inputType or a hint"
        category="Usability"
        priority="5"
        summary="Looks for text fields missing `inputType` or `hint` settings"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). Similarly,a hint attribute displays a hint to the user for what is expected in the text field.

The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.

If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="   &lt;EditText android:text=&quot;&quot; android:id=&quot;@+id/fdEditTextFile&quot;"
        errorLine2="   ^"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_main.xml"
            line="35"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageView android:layout_alignParentLeft=&quot;true&quot; android:id=&quot;@+id/fdrowimage&quot;"
        errorLine2=" ^"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_row.xml"
            line="6"
            column="2"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageView android:layout_alignParentLeft=&quot;true&quot; android:id=&quot;@+id/fdrowimage&quot;"
        errorLine2=" ^"
        quickfix="adt">
        <location
            file="/home/wrd11/documents/SightReading/libs/android-file-dialog/res/layout/file_dialog_row.xml"
            line="6"
            column="2"/>
    </issue>

</issues>
